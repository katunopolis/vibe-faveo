<?php
// Railway setup script for Laravel
error_reporting(E_ALL);
ini_set('display_errors', 1);

echo "<h1>Railway Laravel Setup</h1>";

// Get Railway environment variables
$mysql_host = getenv('MYSQLHOST');
$mysql_port = getenv('MYSQLPORT');
$mysql_database = getenv('MYSQLDATABASE');
$mysql_user = getenv('MYSQLUSER');
$mysql_password = getenv('MYSQLPASSWORD');

echo "<h2>Railway Environment Variables</h2>";
echo "<p>MYSQLHOST: " . ($mysql_host ?: "Not set") . "</p>";
echo "<p>MYSQLPORT: " . ($mysql_port ?: "Not set") . "</p>";
echo "<p>MYSQLDATABASE: " . ($mysql_database ?: "Not set") . "</p>";
echo "<p>MYSQLUSER: " . ($mysql_user ?: "Not set") . "</p>";
echo "<p>MYSQLPASSWORD: " . ($mysql_password ? "Set (hidden)" : "Not set") . "</p>";

// Define potential database hosts to try
$hosts = [
    $mysql_host,
    'mysql',
    'db',
    'database',
    'localhost',
    '127.0.0.1',
];

// Filter out empty hosts
$hosts = array_filter($hosts);

// Try to connect to each host
echo "<h2>Connection Attempts</h2>";
$success = false;
$working_host = null;

foreach ($hosts as $host) {
    if (empty($host)) continue;

    echo "<h3>Trying $host</h3>";
    try {
        $dsn = "mysql:host=$host;port=" . ($mysql_port ?: '3306') . ";dbname=" . ($mysql_database ?: 'railway');
        echo "<p>DSN: $dsn</p>";
        $conn = new PDO($dsn, $mysql_user, $mysql_password);
        $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
        echo "<p style='color:green'>✓ Connection successful!</p>";
        $success = true;
        $working_host = $host;
        $working_connection = $conn;
        break;
    } catch (PDOException $e) {
        echo "<p style='color:red'>✗ Connection failed: " . $e->getMessage() . "</p>";
    }
}

if ($success) {
    echo "<h2 style='color:green'>✓ Database Connection Successful</h2>";
    echo "<p>Successfully connected to MySQL at host '$working_host'</p>";
    
    // Create Laravel database config override
    echo "<h3>Creating Laravel Database Configuration Override</h3>";
    
    // 1. Build the config file
    $configContent = "<?php\n\n";
    $configContent .= "// Generated by railway-setup.php\n";
    $configContent .= "// This file will override Laravel's database configuration\n\n";
    $configContent .= "return [\n";
    $configContent .= "    'default' => 'mysql',\n";
    $configContent .= "    'connections' => [\n";
    $configContent .= "        'mysql' => [\n";
    $configContent .= "            'driver' => 'mysql',\n";
    $configContent .= "            'url' => '',\n";
    $configContent .= "            'host' => '$working_host',\n";
    $configContent .= "            'port' => " . ($mysql_port ?: '3306') . ",\n";
    $configContent .= "            'database' => '" . ($mysql_database ?: 'railway') . "',\n";
    $configContent .= "            'username' => '" . $mysql_user . "',\n";
    $configContent .= "            'password' => '" . $mysql_password . "',\n";
    $configContent .= "            'unix_socket' => '',\n";
    $configContent .= "            'charset' => 'utf8mb4',\n";
    $configContent .= "            'collation' => 'utf8mb4_unicode_ci',\n";
    $configContent .= "            'prefix' => '',\n";
    $configContent .= "            'prefix_indexes' => true,\n";
    $configContent .= "            'strict' => true,\n";
    $configContent .= "            'engine' => null,\n";
    $configContent .= "            'options' => extension_loaded('pdo_mysql') ? array_filter([\n";
    $configContent .= "                PDO::MYSQL_ATTR_SSL_CA => '',\n";
    $configContent .= "            ]) : [],\n";
    $configContent .= "        ],\n";
    $configContent .= "    ],\n";
    $configContent .= "];\n";
    
    // 2. Find the Laravel config directory
    $configDirs = [
        "/var/www/html/config",
        __DIR__ . "/../config",
        "/app/config",
    ];
    
    $configDir = null;
    foreach ($configDirs as $dir) {
        if (is_dir($dir)) {
            $configDir = $dir;
            break;
        }
    }
    
    // 3. Save the file
    if ($configDir) {
        $configPath = $configDir . "/database.php";
        $backupPath = $configDir . "/database.php.backup";
        
        // Backup original file
        if (file_exists($configPath) && !file_exists($backupPath)) {
            copy($configPath, $backupPath);
            echo "<p>Backed up original database config to $backupPath</p>";
        }
        
        // Write new config
        if (file_put_contents($configPath, $configContent)) {
            echo "<p style='color:green'>✓ Successfully wrote Laravel database config to $configPath</p>";
        } else {
            echo "<p style='color:red'>✗ Failed to write config file. Check permissions.</p>";
        }
    } else {
        echo "<p style='color:red'>✗ Could not find Laravel config directory.</p>";
    }
    
    // 4. Create a bootstrap file that can be included early
    $bootstrapContent = "<?php\n\n";
    $bootstrapContent .= "// Railway database bootstrap file\n";
    $bootstrapContent .= "// Include this file before Laravel boots to override database config\n\n";
    $bootstrapContent .= "// Set environment variables\n";
    $bootstrapContent .= "putenv('DB_CONNECTION=mysql');\n";
    $bootstrapContent .= "putenv('DB_HOST=$working_host');\n";
    $bootstrapContent .= "putenv('DB_PORT=" . ($mysql_port ?: '3306') . "');\n";
    $bootstrapContent .= "putenv('DB_DATABASE=" . ($mysql_database ?: 'railway') . "');\n";
    $bootstrapContent .= "putenv('DB_USERNAME=$mysql_user');\n";
    $bootstrapContent .= "putenv('DB_PASSWORD=$mysql_password');\n\n";
    $bootstrapContent .= "// Set $_ENV variables\n";
    $bootstrapContent .= "\$_ENV['DB_CONNECTION'] = 'mysql';\n";
    $bootstrapContent .= "\$_ENV['DB_HOST'] = '$working_host';\n";
    $bootstrapContent .= "\$_ENV['DB_PORT'] = '" . ($mysql_port ?: '3306') . "';\n";
    $bootstrapContent .= "\$_ENV['DB_DATABASE'] = '" . ($mysql_database ?: 'railway') . "';\n";
    $bootstrapContent .= "\$_ENV['DB_USERNAME'] = '$mysql_user';\n";
    $bootstrapContent .= "\$_ENV['DB_PASSWORD'] = '$mysql_password';\n";
    
    $bootstrapPath = __DIR__ . "/railway_db_bootstrap.php";
    if (file_put_contents($bootstrapPath, $bootstrapContent)) {
        echo "<p style='color:green'>✓ Successfully created database bootstrap file at $bootstrapPath</p>";
    } else {
        echo "<p style='color:red'>✗ Failed to write bootstrap file. Check permissions.</p>";
    }
    
    // 5. Try to modify index.php to include our bootstrap file
    $indexPath = __DIR__ . "/index.php";
    if (file_exists($indexPath)) {
        $indexContent = file_get_contents($indexPath);
        $backupPath = __DIR__ . "/index.php.backup";
        
        // Backup original file
        if (!file_exists($backupPath)) {
            copy($indexPath, $backupPath);
            echo "<p>Backed up original index.php to $backupPath</p>";
        }
        
        // Modify the file to include our bootstrap file
        $pattern = "/^<\?php/";
        $replacement = "<?php\n\n// Include Railway database bootstrap\nrequire __DIR__ . '/railway_db_bootstrap.php';\n";
        $modifiedContent = preg_replace($pattern, $replacement, $indexContent);
        
        if ($modifiedContent !== $indexContent) {
            if (file_put_contents($indexPath, $modifiedContent)) {
                echo "<p style='color:green'>✓ Successfully modified index.php to include database bootstrap</p>";
            } else {
                echo "<p style='color:red'>✗ Failed to modify index.php. Check permissions.</p>";
            }
        } else {
            echo "<p style='color:yellow'>⚠ index.php was not modified. Might already include bootstrap.</p>";
        }
    } else {
        echo "<p style='color:red'>✗ Could not find index.php file.</p>";
    }
    
    // 6. Test Laravel connection
    echo "<h3>Testing Laravel Database Connection</h3>";
    echo "<p>To test if Laravel is now connecting to the database, visit your application routes or try running migrations.</p>";
    echo "<p>If you are still experiencing issues, you may need to restart the application or clear Laravel's cache.</p>";
    
} else {
    echo "<h2 style='color:red'>✗ Could not connect to any database host</h2>";
    echo "<p>Make sure your MySQL service is properly set up in Railway:</p>";
    echo "<ol>";
    echo "<li>Verify the MySQL service is running in your Railway project</li>";
    echo "<li>Make sure the MySQL service is linked to your application service</li>";
    echo "<li>Check that the Railway environment variables are correctly set</li>";
    echo "<li>Consider creating a network link between services if needed</li>";
    echo "</ol>";
}
?> 